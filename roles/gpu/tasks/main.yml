---
- name: create {{ cuda_root }} directory
  file: path={{ cuda_root }} state=directory

- name: copy over the cuda deb file
  copy: src=cuda-repo-ubuntu1604_8.0.44-1_amd64.deb dest={{ cuda_root }}/cuda.deb force=no
  register: cuda_deb

- name: install the cuda deb file
  when: cuda_deb.changed
  shell: dpkg -i {{ cuda_root }}/cuda.deb

- name: install cuda (this may take awhile!)
  when: cuda_deb.changed
  apt:
    name: cuda
    update_cache: yes
    state: latest

- name: copy over the libcudnn tarball
  copy: src=cudnn-8.0-linux-x64-v5.0-ga.tgz dest={{ cuda_root }}/cudnn.tar.gz force=no
  register: libcudnn

- name: extract cudnn
  when: libcudnn.changed
  shell: tar -xf cudnn.tar.gz
  args:
    chdir: /srv/cuda

- name: get list of cudnn include files
  shell: ls {{ cuda_root }}/cuda/include/*
  register: cudnn_include

- name: copy cudnn include files
  file: state=link src={{ item }} dest=/usr/local/cuda/include/{{ item | basename }} force=yes
  with_items: '{{ cudnn_include.stdout_lines }}'

- name: get list of cudnn library files
  shell: ls {{ cuda_root }}/cuda/lib64/*
  register: cudnn_lib64

- name: copy the cudnn library files
  file: state=link src={{ item }} dest=/usr/local/cuda/lib64/{{ item | basename }} force=yes
  with_items: '{{ cudnn_lib64.stdout_lines }}'

- name: update environment variables in global bashrc
  blockinfile:
    dest: /etc/bash.bashrc
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR CUDA"
    content: |
      export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
      export CUDA_ROOT=/usr/local/cuda
      export PATH=/usr/local/cuda/bin:$PATH
      alias gtop="watch -n 1 nvidia-smi -q -d UTILIZATION"

- name: run ldconfig
  shell: ldconfig
  environment:
    LD_LIBRARY_PATH: /usr/local/cuda/lib64

# see https://github.com/Theano/Theano/issues/4430 for the motivation for the
# following steps:

- name: install gcc-4.9 and g++-4.9
  apt: name={{ item }} update_cache=yes state=latest
  with_items:
    - gcc-4.9
    - g++-4.9

- name: update alternatives to use gcc-4.9
  shell: update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 20 && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 10

- name: update alternatives to use g++-4.9
  shell: update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 20 && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 10

- name: update alternatives for cc
  shell: update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30 && update-alternatives --set cc /usr/bin/gcc

- name: update alternatives for c++
  shell: update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30 && update-alternatives --set c++ /usr/bin/g++
